apiVersion: apps/v1
kind: Deployment
metadata:
  name: orchestrator-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orchestrator-service
  template:
    metadata:
      labels:
        app: orchestrator-service
    spec:
      initContainers:
      - name: auth-waiter
        image: busybox:1.36
        command: ['sh', '-c', 'until wget -qO- http://auth-profiling-service:3000/public-key; do echo waiting for auth service; sleep 2; done;']
      containers:
      - name: orchestrator-service
        image: giosuciaravola/peerflow-orchestrator-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: AUTH_SERVICE_URL
          value: "http://auth-profiling-service:3000"
        - name: ASSIGNMENT_SERIVICE_URL
          value: "http://assignment-service:3002"
        - name: ASSIGNMENT_SUBM_SERVICE_URL
          value: "http://assignment-submission-service:3003"
        - name: REVIEW_ASSIGNMENT_SERVICE_URL
          value: "http://review-assignment-service:3004"
        - name: REVIEW_PROCESSING_SERVICE_URL
          value: "http://processing-service:3005"
        - name: S3_ENDPOINT_URL
          value: "http://seaweedfs-s3-service:8333"
        - name: S3_ACCESS_KEY
          value: "AKIAIOSFODNN7EXAMPLE"
        - name: S3_SECRET_KEY
          value: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
        - name: AWS_REGION
          value: "us-east-1"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: orchestrator-service
spec:
  selector:
    app: orchestrator-service
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 3001
    targetPort: 3000
    nodePort: 30060